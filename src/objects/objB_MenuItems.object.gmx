<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprController</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pos = 0;

page = 0;
pages = ceil(ds_list_size(global.items) / 6);

isSelected = false;

oText = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (isSelected) {
   if (instance_exists(oText)) {
      if (oText.isDone &amp;&amp; global.keyActionPressed) {
         with oText instance_destroy();
         instance_create(x, y, objB_EnemyTurn);
         instance_destroy();
      }
   }

   exit;
}

if (global.keyBack) {
   instance_destroy();
   objBattle.menu = 0;
}

if      keyboard_check_pressed(vk_up)    {pos--; audio_play_sound(snd_squeak, 0, false);}
else if keyboard_check_pressed(vk_down)  {pos++; audio_play_sound(snd_squeak, 0, false);}
else if keyboard_check_pressed(vk_right) {pos+=3; audio_play_sound(snd_squeak, 0, false);}
else if keyboard_check_pressed(vk_left)  {pos-=3; audio_play_sound(snd_squeak, 0, false);}

max_pos = ds_list_size(global.items);
 
if pos &gt; max_pos-1
   pos = max_pos-1
   
if pos &lt; 0
   pos = 0
   
page = floor(pos / 6);

if (global.keyActionPressed) {
   var item = ds_list_find_value(global.items, pos);
   
   oText = instance_create(56, 270, objText)
   oText.message = "* Вы съели /y" + item[0] + ". * Восстановили /g" + string(item[1]) + " HP.";
   oText.canSkip = true;
   
   global.plrHp += item[1];
   global.plrHpKarma += item[1];
   if (global.plrHp &gt; global.plrHpMax) {
      global.plrHp = global.plrHpMax;
      global.plrHpKarma = global.plrHp;
   }
      
   audio_play_sound(snd_heal, 0, false);
   
   ds_list_delete(global.items, pos);
   
   isSelected = true;
   
   visible = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

var _x = 100;
var _y = 276;

draw_set_font(fntMain);
draw_set_colour(c_white);

var item_y = 0;
var item_x = 0;



var m = 6;
if (page == pages - 1)
   m = ds_list_size(global.items) % 6;
   
if m == 0 
   m = 6;

for (var i = 0; i &lt; m; i++) {
    if (i == 3) {
       item_y = 0;
       item_x += 256;
    }
    
    if (pos == page * 6 + i) {
       draw_sprite(sprB_Soul, 0, _x + item_x - 24, _y + item_y + 10 );
    }
    
    var item = ds_list_find_value(global.items, page*6 + i);
    draw_text(_x + item_x, _y + item_y - 8,  "* " + item[0] ); 
    
    item_y += 32;
}

draw_set_color(c_gray);
draw_rectangle(100, 372, 500, 372+4, false);
draw_set_color(c_white);

var _cx = (page / pages) * 400;
draw_rectangle(100 + _cx, 370, 100 + _cx + (400 / pages), 370+8, false);

draw_set_color(c_white);

draw_text(516, 352, string(page+1) + " / " + string(pages)); 



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
