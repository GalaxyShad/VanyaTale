<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBattleVanyaTop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tick = 0;

dmg_tick = 0;

isTakingDmg = false;

FadeAway = false;

IsFaded = false;

Emotion = 0;


xx = x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (FadeAway) {
   if (image_alpha &gt; 0) image_alpha -= 0.1;
} else {
   if (image_alpha &lt; 1) image_alpha += 0.1;
}

if (image_alpha &lt;= 0) IsFaded = true;
else IsFaded = false;

var x_delta = xx - x;
x += min(max(x_delta, -x_delta / 2), x_delta / 2);

tick += 0.175;

var bot_x = x;
var bot_y = y + 64;

var top_x = x + sin(tick) * 2;
var top_y = y + abs(sin(tick))

var head_x = x + sin(tick) * 2.5;
var head_y = y-84 + abs(cos(tick/1.2)) * 2;

if (isTakingDmg) {
   dmg_tick += 1;

   top_y = y;
   head_y = y-84;
   
   bot_x  = x + cos(dmg_tick+1.0) * 2;
   top_x  = x + cos(dmg_tick+0.5) * 2;
   head_x = x + cos(dmg_tick) * 2;
}

draw_sprite_ext(sprBattleVanyaBottom, 0, bot_x, bot_y, 2, 2, 0, c_white, image_alpha);


draw_sprite_ext(sprBattleVanyaTop, 0, top_x, top_y, 2, 2, 0, c_white, image_alpha);

if (!instance_exists(objB_Dialog)){
    Emotion = 0
    
    if (global.enemyHp &lt;= global.enemyHpMax / 3)
       draw_sprite_ext(sprBattleVanyaHead, 2-isTakingDmg, head_x, head_y, 2, 2, 0, c_white, image_alpha);
    else
        draw_sprite_ext(sprBattleVanyaHead, isTakingDmg, head_x, head_y, 2, 2, 0, c_white, image_alpha);
} else 
     draw_sprite_ext(sprVanyaEmotions, Emotion, head_x, head_y, 2, 2, 0, c_white, image_alpha);

if (objB_Border.top &lt;= bot_y + 16*2 &amp;&amp; image_alpha == 1) {
    while (xx+23*2 &gt;= objB_Border.left-32) {
       xx--;
    }
}

else 
   xx = room_width / 2;
   
global.en_x = x;
global.en_y = y;
   
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
